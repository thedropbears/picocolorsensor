---
name: CI

on:
  pull_request:
  push:
    branches: [main]
    tags: ["*"]

jobs:
  sdist:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist

  #
  # Build native wheels
  #

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - macos-11
          - windows-2022
        python_version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Set ccache variant
        shell: bash
        id: ccache
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "VARIANT=sccache" >> $GITHUB_OUTPUT
            echo "RPYBUILD_CC_LAUNCHER=sccache" >> $GITHUB_ENV
          else
            echo "VARIANT=ccache" >> $GITHUB_OUTPUT
            echo "RPYBUILD_CC_LAUNCHER=ccache" >> $GITHUB_ENV
          fi

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ matrix.python_version }}
          variant: ${{ steps.ccache.outputs.variant }}

      - uses: robotpy/build-actions/install-robotpy-build@v2023
      - uses: robotpy/build-actions/install-build-deps@v2023
      - uses: robotpy/build-actions/build-wheel@v2023

      - name: Show installed packages
        shell: bash
        run: |
          python -m pip list

      - uses: robotpy/build-actions/test-native-wheel@v2023

      - uses: actions/upload-artifact@v3
        with:
          name: "dist-${{ runner.os }}"
          path: dist

  #
  # Build roboRIO/raspbian wheels
  #

  cross-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - container: robotpy/roborio-cross-ubuntu:2023.2
            name: roborio
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py38-arm32
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py38-aarch64
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py39-arm32
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py39-aarch64
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py310-arm32
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py310-aarch64
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py311-arm32
          #   name: raspbian
          # - container: robotpy/raspbian-cross-ubuntu:2023.4-py311-aarch64
          #   name: raspbian

    container:
      image: "${{ matrix.os.container }}"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set ccache env
        shell: bash
        run: |
          echo "RPYBUILD_CC_LAUNCHER=ccache" >> $GITHUB_ENV

      - run: apt-get update
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os.container }}
          variant: ccache

      - uses: robotpy/build-actions/install-robotpy-build@v2023
        with:
          python: /build/venv/bin/cross-python
      - uses: robotpy/build-actions/install-build-deps@v2023
        with:
          python: /build/venv/bin/cross-python
          wheeldir: ${{ matrix.os.name }}

      - name: Show installed packages
        shell: bash
        run: |
          /build/venv/bin/build-python -m pip list
          /build/venv/bin/cross-python -m pip list

      # See https://github.com/pypa/setuptools_scm/issues/784
      - name: Set git directory as safe to allow setuptools-scm to work
        shell: bash
        run: |
          pwd
          /usr/bin/git config --global --add safe.directory $(pwd)

      - uses: robotpy/build-actions/build-wheel@v2023
        with:
          python: /build/venv/bin/cross-python

      - uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.os.name }}
          path: dist

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [sdist, build, cross-build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist/

      - uses: actions/download-artifact@v3
        with:
          name: dist-Windows
          path: dist/

      - uses: actions/download-artifact@v3
        with:
          name: dist-macOS
          path: dist/

      - uses: actions/download-artifact@v3
        with:
          name: dist-Linux
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify_metadata: false
